# -*- coding: utf-8 -*-
"""ML3 multiple regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uHqFYCUSHDe6Q3elUkJVQpa6FKiErYVE

# Q3)(b) Implement a Multiple Linear Regression Model on a Dataset.
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Multiple Linear Regression"""

df = pd.read_excel('/content/Real estate valuation data set.xlsx')
df

dep= df.iloc[:,-1].values #dependent
dep

inp= df.iloc[:,:-1].values #indepent
inp

"""## Checking Nan"""

df.isna().sum() #no null values

"""## Splitting"""

from sklearn.model_selection import train_test_split
inp_train, inp_test, dep_train, dep_test = train_test_split(inp, dep, test_size = 0.2, random_state = 1)

"""## Training"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(inp_train, dep_train)

"""## Predecting test values and comparing with actual value"""

dep_pred = regressor.predict(inp_test)
np.set_printoptions(precision=2)

df_pred = pd.DataFrame({'actual value' : np.array(dep_test), 'predicted value' : dep_pred}).astype('int')
df_pred

print(regressor.predict([[ 2013.583333 ,	5.1 ,	80.98450	, 7	, 24.98746 ,	121.54391]]))

"""## Coefficient and intercept"""

print(regressor.coef_)
print(regressor.intercept_)