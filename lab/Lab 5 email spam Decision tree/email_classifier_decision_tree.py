# -*- coding: utf-8 -*-
"""email_classifier_decision_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OwIu7OWgvweKCrrlWaM9668FFZ1Pjaqh

#Q5) Perform the classification of Email spam or not using Decision Tree Classifier
"""

from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, f1_score, confusion_matrix

df = pd.read_csv('emails.csv')

df.head(5)

df.drop('Email No.', axis=1,inplace=True)

for i in df.columns:
    if df[i].dtype == np.int64:
        pass
    else:
        print(i)

X = df.iloc[:,:-1].values
y = df.iloc[:,-1].values
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)

dtc = DecisionTreeClassifier()
dtc.fit(X_train,y_train)

y_pred = dtc.predict(X_test)

print(f'accuracy: {accuracy_score(y_test,y_pred)}\tf1_score: {f1_score(y_test,y_pred)}\nconfusion matrix: \n{confusion_matrix(y_test,y_pred)}')