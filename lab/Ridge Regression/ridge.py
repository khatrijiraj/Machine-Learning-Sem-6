# -*- coding: utf-8 -*-
"""ridge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dnn_btrHrWmTkfHHp3v8niLOQYOdaBAd

# Q6) Take a dataset where features do not have a linear relationship. Implement Linear Regression on it. Also, implement Ridge Regression on it and compare the results.
"""

from sklearn.linear_model import Ridge
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import KFold
from sklearn.preprocessing import StandardScaler

df = pd.read_csv('train.csv')

df.head()

df.isna().sum().sum()

df.drop(['Id','Serial Number'],axis=1,inplace=True)

df.dropna(inplace=True)

X = df.iloc[:,:-1].values
y = df.iloc[:,-1].values

kf = KFold(n_splits=5,shuffle=True,random_state=4343)
t=0
for i,j in kf.split(X,y):
    y_train,y_test = y[i],y[j]
    X_test = X[j]
    X_train = X[i]
    lr = LinearRegression()
    lr.fit(X_train,y_train)
    y_pred = lr.predict(X_test)
    t += mean_squared_error(y_test,y_pred)
t = t/5
t

kf = KFold(n_splits=5,shuffle=True,random_state=2)
t=0
for i,j in kf.split(X,y):
    y_train,y_test = y[i],y[j]
    X_test = X[j]
    X_train = X[i]
    rr = Ridge(alpha=1)
    rr.fit(X_train,y_train)
    y_pred2 = rr.predict(X_test)
    t += mean_squared_error(y_test,y_pred2)
t = t/5
t

