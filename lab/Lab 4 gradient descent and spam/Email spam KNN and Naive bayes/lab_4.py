# -*- coding: utf-8 -*-
"""lab 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17iiltbpW3LV6Z8oF3VG0L_omwWJaeV8C

# Q4:a) Use the KNN and Naive Bayes Classifier to classify the Emails into Spam or not Spam. Also, evaluate the accuracy of both the Models
"""

import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

emails = pd.read_csv('emails.csv')

emails

X = emails.iloc[:,2:-1].values
y = emails.iloc[:,-1].values

"""train test split"""

seed = 200
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=seed)

"""finding the best value for the k in knn"""

k=None
ac = 0
for i in range(1,20,1):
    knn = KNeighborsClassifier(i)
    knn.fit(X_train,y_train)
    y_pred = knn.predict(X_test)
    t = accuracy_score(y_test,y_pred)
    if t>ac:
        ac = t
        k = i

"""using knn for found value"""

knn = KNeighborsClassifier(k)
knn.fit(X_train,y_train)
y_pred = knn.predict(X_test)
print(k)
print(accuracy_score(y_test,y_pred))

"""using Gauusian Naive bayes on same test and train set"""

nb = GaussianNB()
nb.fit(X_train,y_train)
y_pred2 = nb.predict(X_test)
accuracy_score(y_test,y_pred2)